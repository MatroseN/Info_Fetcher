,Hyper parameters
0,"batch_size,32"
1,"seed,78673800"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0., -0.]]],


       [[[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]]],


       [[[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0.,  0.,  0.,  0., -0.,  0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
        0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,
       -0.,  0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
        0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,
       -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
        0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,
        0.,  0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0.,  0.],
       ...,
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0.,  0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0.,  0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 1.4427296e-03, -2.7276585e-03, -8.5677141e-03, -1.5344329e-05,
       -2.0424414e-02,  1.7456835e-03,  6.5971315e-03,  9.2522819e-03,
        1.5809814e-02, -2.9084564e-03, -6.0005341e-06, -6.0955267e-06,
       -6.1964233e-06, -6.1202913e-06, -6.2527424e-06, -6.1329902e-06,
       -6.2365516e-06, -6.1656810e-06, -6.1974406e-06, -6.1632340e-06,
       -6.1836645e-06, -6.1938949e-06, -6.3111534e-06, -6.2061217e-06,
       -6.2723070e-06, -6.1723222e-06, -6.2353720e-06, -6.1658393e-06,
       -6.2761478e-06, -6.1284945e-06, -6.1563715e-06, -6.2321751e-06,
       -6.2130557e-06, -6.1351193e-06, -6.2511417e-06, -6.0749821e-06,
       -6.1879323e-06, -6.2729105e-06, -6.1313290e-06, -6.2107997e-06,
       -6.1590308e-06, -6.1105429e-06, -6.2105883e-06], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=38300>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0., -0.,  0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.],
         [-0.,  0.,  0.,  0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0., -0.]],

        [[-0., -0., -0., -0.,  0.,  0.],
         [-0.,  0.,  0.,  0., -0.,  0.],
         [-0.,  0.,  0.,  0., -0., -0.]]],


       [[[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0., -0.,  0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]]],


       [[[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]],

        [[ 0.,  0., -0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.],
         [ 0.,  0.,  0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0.,  0.,  0.,  0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0.,  0., ..., -0.,  0., -0.],
       [-0., -0., -0., ...,  0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0.,  0.],
       ...,
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
       -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0., -0., -0.,
        0.,  0., -0.,  0., -0., -0., -0.,  0.,  0., -0., -0.,  0.,  0.,
       -0.,  0., -0., -0.,  0., -0.,  0., -0.,  0., -0., -0.,  0., -0.,
        0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0.,  0.,  0.,  0.,
       -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
       -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
        0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0.,  0., -0.,  0.,
        0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0.,  0.],
       ...,
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0., -0.,  0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ..., -0., -0.,  0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[ 0., -0.,  0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 1.4427296e-03, -2.7276585e-03, -8.5677141e-03, -1.5344329e-05,
       -2.0424414e-02,  1.7456835e-03,  6.5971315e-03,  9.2522819e-03,
        1.5809814e-02, -2.9084564e-03, -6.0005341e-06, -6.0955267e-06,
       -6.1964233e-06, -6.1202913e-06, -6.2527424e-06, -6.1329902e-06,
       -6.2365516e-06, -6.1656810e-06, -6.1974406e-06, -6.1632340e-06,
       -6.1836645e-06, -6.1938949e-06, -6.3111534e-06, -6.2061217e-06,
       -6.2723070e-06, -6.1723222e-06, -6.2353720e-06, -6.1658393e-06,
       -6.2761478e-06, -6.1284945e-06, -6.1563715e-06, -6.2321751e-06,
       -6.2130557e-06, -6.1351193e-06, -6.2511417e-06, -6.0749821e-06,
       -6.1879323e-06, -6.2729105e-06, -6.1313290e-06, -6.2107997e-06,
       -6.1590308e-06, -6.1105429e-06, -6.2105883e-06], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=38300>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=38300>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=38300>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
