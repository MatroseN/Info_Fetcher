,Hyper parameters
0,"batch_size,32"
1,"seed,29"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.]]],


       [[[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0., -0.,  0.],
         [ 0., -0.,  0., -0., -0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.]]],


       [[[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0.],
         [ 0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0.,  0.,  0.,  0., -0., -0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
       -0.,  0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
       -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
        0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,
        0., -0.,  0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       ...,
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 8.8262912e-03, -5.6325989e-03, -8.6485194e-03, -2.1876497e-03,
       -5.5887117e-03,  2.6044694e-03,  1.3007812e-03, -2.6278540e-03,
       -7.0907344e-04,  1.2990847e-02, -1.0003459e-05, -1.0013019e-05,
       -1.0076143e-05, -9.5339701e-06, -9.9429717e-06, -9.8866240e-06,
       -9.7138427e-06, -9.9542212e-06, -9.9252011e-06, -1.0059581e-05,
       -1.0043395e-05, -1.0119332e-05, -1.0303635e-05, -9.9062536e-06,
       -9.9966546e-06, -1.0122753e-05, -1.0243892e-05, -9.4655297e-06,
       -9.9749459e-06, -9.6777212e-06, -9.9188910e-06, -1.0121735e-05,
       -9.8793607e-06, -1.0268277e-05, -9.9573008e-06, -9.8933260e-06,
       -1.0111223e-05, -9.7617321e-06, -9.9583312e-06, -9.7283864e-06,
       -9.7034244e-06, -9.8844048e-06, -9.8289911e-06], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=26044>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[-0., -0., -0., -0.,  0., -0.],
         [-0., -0., -0., -0.,  0.,  0.],
         [ 0., -0., -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0.,  0.,  0.]]],


       [[[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0., -0.,  0.],
         [ 0., -0.,  0., -0., -0.,  0.]],

        [[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.]]],


       [[[ 0., -0.,  0., -0.,  0., -0.],
         [ 0., -0.,  0., -0.,  0.,  0.],
         [ 0., -0.,  0., -0., -0.,  0.]],

        [[ 0., -0.,  0., -0., -0., -0.],
         [ 0., -0.,  0.,  0., -0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.]],

        [[ 0., -0.,  0.,  0.,  0., -0.],
         [ 0., -0.,  0.,  0.,  0.,  0.],
         [ 0., -0.,  0.,  0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0.,  0.,  0.,  0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0.,  0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0.,  0., -0., -0.,  0., -0., -0., -0.,
          -0., -0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ...,  0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.],
       ...,
       [-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ...,  0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([ 0.,  0., -0., -0., -0.,  0.,  0.,  0., -0., -0., -0., -0., -0.,
       -0.,  0., -0.,  0.,  0.,  0., -0.,  0., -0., -0.,  0., -0., -0.,
       -0.,  0.,  0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0.,
       -0., -0.,  0., -0.,  0.,  0., -0., -0., -0.,  0., -0.,  0., -0.,
       -0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0.,  0.,
       -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,  0.,
        0.,  0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0., -0.,
        0., -0.,  0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       ...,
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       ...,
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([ 8.8262912e-03, -5.6325989e-03, -8.6485194e-03, -2.1876497e-03,
       -5.5887117e-03,  2.6044694e-03,  1.3007812e-03, -2.6278540e-03,
       -7.0907344e-04,  1.2990847e-02, -1.0003459e-05, -1.0013019e-05,
       -1.0076143e-05, -9.5339701e-06, -9.9429717e-06, -9.8866240e-06,
       -9.7138427e-06, -9.9542212e-06, -9.9252011e-06, -1.0059581e-05,
       -1.0043395e-05, -1.0119332e-05, -1.0303635e-05, -9.9062536e-06,
       -9.9966546e-06, -1.0122753e-05, -1.0243892e-05, -9.4655297e-06,
       -9.9749459e-06, -9.6777212e-06, -9.9188910e-06, -1.0121735e-05,
       -9.8793607e-06, -1.0268277e-05, -9.9573008e-06, -9.8933260e-06,
       -1.0111223e-05, -9.7617321e-06, -9.9583312e-06, -9.7283864e-06,
       -9.7034244e-06, -9.8844048e-06, -9.8289911e-06], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=26044>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=26044>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=26044>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
