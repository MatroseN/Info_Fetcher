,Hyper parameters
0,"batch_size,32"
1,"seed,46120159"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]]],


       [[[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]]],


       [[[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0.,  0.,  0.,  0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0.,  0., -0., ...,  0.,  0., -0.],
       ...,
       [ 0.,  0.,  0., ...,  0., -0., -0.],
       [-0.,  0.,  0., ...,  0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ...,  0., -0.,  0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [-0.,  0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0.,  0., ..., -0., -0., -0.],
       [ 0.,  0.,  0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [ 0.,  0.,  0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-2.0955130e-03, -7.2365103e-04,  3.0059644e-03, -6.7386390e-03,
       -1.4773319e-03, -1.8666553e-03, -6.0623013e-03,  7.0902403e-03,
        2.3714595e-03,  6.6395244e-03, -4.2873812e-06, -4.1845574e-06,
       -4.3302548e-06, -4.4362650e-06, -4.4408757e-06, -4.4948529e-06,
       -4.0941482e-06, -4.4602402e-06, -4.4246772e-06, -4.2373172e-06,
       -4.3019440e-06, -4.2748125e-06, -4.3801110e-06, -4.3768373e-06,
       -4.2732377e-06, -4.1226053e-06, -4.3332125e-06, -4.1587673e-06,
       -4.3985588e-06, -4.4604549e-06, -4.4470135e-06, -4.5088232e-06,
       -4.3102655e-06, -4.2694542e-06, -4.2472070e-06, -4.4411827e-06,
       -4.4236376e-06, -4.3926070e-06, -4.4935168e-06, -4.2286256e-06,
       -4.2567226e-06, -4.2330566e-06, -4.3549799e-06], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=53620>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]]],


       [[[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]]],


       [[[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0.,  0., -0.,  0., -0.,  0.]],

        [[-0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.]],

        [[ 0.,  0.,  0., -0.,  0., -0.],
         [-0.,  0., -0.,  0.,  0.,  0.],
         [-0., -0., -0.,  0., -0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([-0., -0., -0.,  0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0.,  0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
           0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0., -0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[ 0., -0., -0., ..., -0., -0., -0.],
       [-0.,  0.,  0., ..., -0., -0., -0.],
       [-0.,  0., -0., ...,  0.,  0., -0.],
       ...,
       [ 0.,  0.,  0., ...,  0., -0., -0.],
       [-0.,  0.,  0., ...,  0.,  0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,
       -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ...,  0., -0.,  0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [-0.,  0., -0., ..., -0., -0.,  0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,
        0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0.,  0., ..., -0., -0., -0.],
       [ 0.,  0.,  0., ..., -0., -0., -0.],
       [ 0., -0.,  0., ..., -0., -0., -0.],
       ...,
       [ 0.,  0.,  0., ..., -0., -0., -0.],
       [ 0., -0., -0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-2.0955130e-03, -7.2365103e-04,  3.0059644e-03, -6.7386390e-03,
       -1.4773319e-03, -1.8666553e-03, -6.0623013e-03,  7.0902403e-03,
        2.3714595e-03,  6.6395244e-03, -4.2873812e-06, -4.1845574e-06,
       -4.3302548e-06, -4.4362650e-06, -4.4408757e-06, -4.4948529e-06,
       -4.0941482e-06, -4.4602402e-06, -4.4246772e-06, -4.2373172e-06,
       -4.3019440e-06, -4.2748125e-06, -4.3801110e-06, -4.3768373e-06,
       -4.2732377e-06, -4.1226053e-06, -4.3332125e-06, -4.1587673e-06,
       -4.3985588e-06, -4.4604549e-06, -4.4470135e-06, -4.5088232e-06,
       -4.3102655e-06, -4.2694542e-06, -4.2472070e-06, -4.4411827e-06,
       -4.4236376e-06, -4.3926070e-06, -4.4935168e-06, -4.2286256e-06,
       -4.2567226e-06, -4.2330566e-06, -4.3549799e-06], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=53620>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=53620>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=53620>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
