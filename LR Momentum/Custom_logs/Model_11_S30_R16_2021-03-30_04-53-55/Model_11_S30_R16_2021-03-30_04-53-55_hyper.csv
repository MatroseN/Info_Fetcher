,Hyper parameters
0,"batch_size,32"
1,"seed,16746034"
2,"_use_locking,True"
3,"_name,SGD"
4,"_hyper,{'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
5,"_slots,{'conv2d/kernel_5': {'momentum': <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]]],


       [[[ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]]],


       [[[ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]]]], dtype=float32)>}, 'conv2d/bias_16': {'momentum': <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0., -0.,  0.,  0.], dtype=float32)>}, 'conv2d_1/kernel_34': {'momentum': <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.]]],


       [[[-0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.]]]], dtype=float32)>}, 'conv2d_1/bias_45': {'momentum': <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0.], dtype=float32)>}, 'dense/kernel_66': {'momentum': <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0.,  0.,  0.],
       [-0., -0., -0., ..., -0.,  0.,  0.],
       [-0.,  0., -0., ...,  0.,  0., -0.],
       ...,
       [-0.,  0., -0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ...,  0.,  0.,  0.],
       [-0.,  0.,  0., ...,  0.,  0., -0.]], dtype=float32)>}, 'dense/bias_77': {'momentum': <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
       -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
       -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,
        0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,
        0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
       -0.,  0., -0.], dtype=float32)>}, 'dense_1/kernel_92': {'momentum': <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_1/bias_103': {'momentum': <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0., -0.], dtype=float32)>}, 'dense_2/kernel_118': {'momentum': <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0.,  0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>}, 'dense_2/bias_129': {'momentum': <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-7.75307301e-04, -1.53572951e-03, -8.78226385e-03,  1.41411414e-02,
       -5.10605332e-03,  8.76514893e-03, -8.02562397e-04, -7.03827571e-03,
       -8.14136118e-03,  9.61348321e-03, -1.03800185e-05, -1.03363336e-05,
       -1.01179785e-05, -1.03397961e-05, -1.02509912e-05, -1.02675649e-05,
       -1.04710361e-05, -1.03389157e-05, -1.02189879e-05, -1.02540271e-05,
       -1.02649838e-05, -1.03338189e-05, -9.40598238e-06, -1.05193594e-05,
       -1.01973528e-05, -1.02106424e-05, -1.02379136e-05, -1.04058881e-05,
       -1.02704180e-05, -1.00580692e-05, -1.01065307e-05, -1.02351860e-05,
       -1.02065460e-05, -1.02977310e-05, -1.03072243e-05, -1.02314762e-05,
       -1.01439300e-05, -1.04289174e-05, -1.04356723e-05, -1.00379002e-05,
       -1.02824952e-05, -1.04589280e-05, -1.02077165e-05], dtype=float32)>}}"
6,"_slot_names,['momentum']"
7,"_weights,[<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=24512>, <tf.Variable 'SGD/conv2d/kernel/momentum:0' shape=(3, 3, 3, 6) dtype=float32, numpy=
array([[[[ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]]],


       [[[ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]]],


       [[[ 0.,  0., -0., -0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]],

        [[ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.],
         [ 0.,  0., -0.,  0.,  0.,  0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d/bias/momentum:0' shape=(6,) dtype=float32, numpy=array([ 0., -0., -0., -0.,  0.,  0.], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/kernel/momentum:0' shape=(3, 3, 6, 16) dtype=float32, numpy=
array([[[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0.,  0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0., -0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0.,  0., -0.]]],


       [[[-0.,  0.,  0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0.,  0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0.,  0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0.,  0., -0., -0., -0.,  0., -0., -0.,  0., -0.,  0.,
          -0., -0., -0., -0.]],

        [[-0.,  0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.]]],


       [[[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.]],

        [[-0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0.,  0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0.,  0., -0.],
         [-0., -0., -0., -0., -0., -0.,  0., -0., -0., -0.,  0.,  0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.]],

        [[-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
          -0., -0., -0., -0.],
         [-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0.,
          -0., -0., -0., -0.],
         [-0.,  0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
          -0., -0., -0., -0.],
         [-0., -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
           0., -0.,  0., -0.]]]], dtype=float32)>, <tf.Variable 'SGD/conv2d_1/bias/momentum:0' shape=(16,) dtype=float32, numpy=
array([-0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense/kernel/momentum:0' shape=(576, 120) dtype=float32, numpy=
array([[-0., -0., -0., ...,  0.,  0.,  0.],
       [-0., -0., -0., ..., -0.,  0.,  0.],
       [-0.,  0., -0., ...,  0.,  0., -0.],
       ...,
       [-0.,  0., -0., ..., -0.,  0., -0.],
       [-0.,  0., -0., ...,  0.,  0.,  0.],
       [-0.,  0.,  0., ...,  0.,  0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense/bias/momentum:0' shape=(120,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0.,  0.,  0.,  0.,  0., -0., -0.,  0.,  0.,
       -0.,  0.,  0.,  0., -0., -0., -0., -0., -0., -0., -0.,  0.,  0.,
       -0., -0., -0., -0.,  0.,  0., -0., -0., -0., -0., -0.,  0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
        0.,  0., -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0., -0.,
        0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0.,  0.,
       -0., -0., -0.,  0., -0.,  0.,  0., -0., -0.,  0.,  0.,  0., -0.,
        0., -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0.,  0., -0.,
        0., -0., -0., -0.,  0., -0., -0., -0.,  0., -0., -0., -0.,  0.,
       -0.,  0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_1/kernel/momentum:0' shape=(120, 84) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0.,  0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0., -0., ...,  0., -0., -0.],
       [-0.,  0., -0., ...,  0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_1/bias/momentum:0' shape=(84,) dtype=float32, numpy=
array([-0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0.,  0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0.,  0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0., -0.,
       -0., -0., -0., -0., -0., -0., -0., -0.,  0., -0., -0.,  0., -0.,
       -0.,  0., -0., -0., -0., -0.], dtype=float32)>, <tf.Variable 'SGD/dense_2/kernel/momentum:0' shape=(84, 43) dtype=float32, numpy=
array([[-0.,  0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       [-0., -0., -0., ..., -0., -0., -0.],
       ...,
       [-0., -0.,  0., ..., -0., -0., -0.],
       [ 0.,  0., -0., ..., -0., -0., -0.],
       [-0.,  0., -0., ..., -0., -0., -0.]], dtype=float32)>, <tf.Variable 'SGD/dense_2/bias/momentum:0' shape=(43,) dtype=float32, numpy=
array([-7.75307301e-04, -1.53572951e-03, -8.78226385e-03,  1.41411414e-02,
       -5.10605332e-03,  8.76514893e-03, -8.02562397e-04, -7.03827571e-03,
       -8.14136118e-03,  9.61348321e-03, -1.03800185e-05, -1.03363336e-05,
       -1.01179785e-05, -1.03397961e-05, -1.02509912e-05, -1.02675649e-05,
       -1.04710361e-05, -1.03389157e-05, -1.02189879e-05, -1.02540271e-05,
       -1.02649838e-05, -1.03338189e-05, -9.40598238e-06, -1.05193594e-05,
       -1.01973528e-05, -1.02106424e-05, -1.02379136e-05, -1.04058881e-05,
       -1.02704180e-05, -1.00580692e-05, -1.01065307e-05, -1.02351860e-05,
       -1.02065460e-05, -1.02977310e-05, -1.03072243e-05, -1.02314762e-05,
       -1.01439300e-05, -1.04289174e-05, -1.04356723e-05, -1.00379002e-05,
       -1.02824952e-05, -1.04589280e-05, -1.02077165e-05], dtype=float32)>]"
8,"_iterations,<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=24512>"
9,"_deferred_slot_restorations,{}"
10,"_initial_decay,0.0"
11,"_hypers_created,True"
12,"_momentum,True"
13,"nesterov,False"
14,"_self_setattr_tracking,True"
15,"_self_unconditional_checkpoint_dependencies,[TrackableReference(name='iter', ref=<tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=24512>), TrackableReference(name='decay', ref=<tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>), TrackableReference(name='learning_rate', ref=<tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>), TrackableReference(name='momentum', ref=<tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>)]"
16,"_self_unconditional_dependency_names,{'iter': <tf.Variable 'SGD/iter:0' shape=() dtype=int64, numpy=24512>, 'decay': <tf.Variable 'SGD/decay:0' shape=() dtype=float32, numpy=0.0>, 'learning_rate': <tf.Variable 'SGD/learning_rate:0' shape=() dtype=float32, numpy=0.02>, 'momentum': <tf.Variable 'SGD/momentum:0' shape=() dtype=float32, numpy=0.99>}"
17,"_self_unconditional_deferred_dependencies,{}"
18,"_self_update_uid,-1"
19,"_self_name_based_restores,set()"
